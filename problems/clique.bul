vertex[A], vertex[B], ~edge[A,B], A < B :: ~s(A), ~s(B).
vertex[N], ~vertex[N+1] :: nb_vertices[N].

budget[D] :: range_1[0..D].
budget[D] :: range_2[1..D].

vertex[I], range_1[J] :: counter(I-1, J), select(I).
vertex[I], range_2[J] :: counter(I-1, J), counter(I-1, J-1).

%% for i = j
%% atLeast_{i, j} <-> (atLeast_{i-1,j-1} & s(i))

counter(0,0).
~counter(0,1).
nb_vertices[N], budget[D] :: counter(N,D).
nb_vertices[N], budget[D] :: ~counter(N,D+1).

vertex[1..3].
edge[1,2]. edge[2,3]. edge[1,3].

%budget[1].
%budget[2].
%budget[3].


%% atLeast{A,0} = true
%% atLeast{A,1} = s(A)

%% atLeast{B,0} = true
%% atLeast{B,1} = atLeast{A,1} | s(B)
%% atLeast{B,2} = atLeast{A,1} & s(B)

%% atLeast{C,0} = true
%% atLeast{C,1} = atLeast{B,1} | s(C)
%% atLeast{C,2} = (atLeast{B,1} & s(C)) | atLeast{B,2} 
                = (atLeast{B,1} | atLeast{B,2}) & (atLeast{B,2} | s(C))
%% atLeast{C,3} = atLeast{B,2} & s(C)

%% atLeast{D,0} = true
%% atLeast{D,1} = atLeast{C,1} | s(D)
%% atLeast{D,2} = (atLeast{C,1} & s(D) | atLeast{C,2}
                = (atLeast{C,1} | atLeast{C,2}) & (atLeast{C,2} | s(D))
%% atLeast{D,3} = (atLeast{C,2} & s(D)) | atLeast{C,3}
                = (atLeast{C,2} | atLeast{C,3}) & (atLeast{C,3} & s(D))
%% atLeast{D,4} = atLeast{C,3} & s(D)


